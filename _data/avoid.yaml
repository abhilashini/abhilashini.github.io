- heading: "Refactor with intent, not haste"
  text: >-
    Rewriting code on impulse risks breaking what users rely on. 
    Even flawed systems have hidden purpose. Refactor only 
    after tests safeguard agreed needs and plans ensure continuity for users.
  icon: "fas fa-sync-alt"
- heading: "Code with vision, not velocity"
  text: >-
    Clarity on requirements builds reusability, not just deliverables. 
    Prioritise “plug and play” systems over “patch and pray” fixes.
  icon: "fas fa-binoculars"
  comparison_table: |
    | ✅ **Plug and Play**  | | ❌ **Patch and Pray**  |
    | <img src="/assets/images/plug_n_play.gif" style="height:12rem; width:auto;" alt="Modular growth"> |   | <img src="/assets/images/patch_n_pray.gif" style="height:12rem; width:auto;" alt="Code patches multiplying like chaotic clones"> |
- heading: "System design is a map, not a maze"
  text: >-
    If a code block doesn’t trace to a user flow or data-driven need, 
    it’s noise. Codebases thrive when they embody user purpose,
    not just ***how*** they work. Good products are anchored in code 
    charted by what users seek, not just what engineers ship.
  icon: "fas fa-map"
- heading: "Code to Context, Not Frameworks"
  text: >-
    Frameworks and algorithms solve narrow problems. When they warp a 
    product’s design, users inherit quirks that compound into design debt. 
    Bend tools to user needs, never the reverse.
  code: |
    def button_label(action, device):
      if device == "screen_reader":
          return f"Press to {action}"
      return action.capitalize()
  language: "python"
  icon: "fas fa-tools"
- heading: "Maintainable systems speak human"
  text: >-
    When errors leave developers guessing, users suffer too. 
    Maintainability begins with empathy — for our future selves, users 
    and inheriting developers. Self-diagnosing logs and user-readable 
    errors turn debugging from scavenger hunts into guided fixes.
  icon: "fas fa-stethoscope"
- heading: "Understanding the unseen: Gestalt of knowledge"
  text: >-
    We often settle for surface-level understanding—what’s visible feels sufficient. 
    But like an iceberg, what we see is rarely the full picture. True comprehension 
    asks more: What’s beneath this? What shaped it? Without that pause, rushed 
    judgments multiply complexity instead of solving it.
  icon: "fas fa-mountain"