- heading: "The hidden price of powerful hardware"
  text: >-
    Servers tolerate inefficient code today, but developers shouldn't. 
    Verbose code might run faster with modern hardware, 
    but slows down the humans maintaining it and evolving the product.
    Good code communicates intent unambiguously; succinctly and 
    steadily powering a well-designed user experience.
  icon: "fas fa-feather-alt"

- heading: "SOS from SOS (Shiny Object Syndrome)"
  text: >-
    A 10-line script often outlives 500 lines of "modern" boilerplate. 
    New tools are valuable when they demonstrably improve the 
    experience for our users or streamline the team's ability to deliver value.
  icon: "fas fa-shiny-alt"

- heading: "Anyone can code ≠ Everyone should"
  text: >-
    Quick scripts are fine for personal use. In shared systems, hacky code 
    becomes a tax on everyone — including users. Code, like a design system, 
    is a collaborative artifact. It thrives on shared understanding, 
    not isolated epxeriments.

- heading: "Redesign for needs, not trends"
  text: >-
    UX should be user-centric, not aesthetic. If users don’t struggle with 
    the old UI, 'modernizing' it is often just theater, consuming valuable 
    engineering resources. Redesign when user feedback and data prove 
    the current design fails. Otherwise, focus on incremental tweaks, 
    not costly overhauls.

- heading: "Design for structure, not content"
  text: >-
    Whether it's a grid of fruits or financials, the underlying structure 
    benefits from consistency. Good design and robust code doesn't tightly couple
    with specific content; rather it focuses on adaptable meta-structures. 
    This structural thinking is key to building simple and scalable products.

- heading: "Tests prevent silent failures"
  text: >-
    Tests mean more code, but ensures stability, silently guarding user trust 
    and product integrity. It’s where engineering rigor meets user-centric 
    design — catching failures before they erode experiences.

- heading: "Universal programming"
  text: >-
    Programming’s universal grammar — logic, structure, constraints — transcends stacks. 
    This foundation enables developers to adapt faster, teams to collaborate clearer, 
    and systems to outlive trends."
  icon: "fas fa-globe"
